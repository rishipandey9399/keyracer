{
    "challenges": [
        {
            "id": 101,
            "language": "java",
            "title": "Java Hello World",
            "description": "Write a Java program that prints 'Hello, World!' to the console.",
            "examples": { "output": "Hello, World!" },
            "notes": ["Use System.out.println", "Output must match exactly"],
            "testCases": [ { "input": "", "expectedOutput": "Hello, World!" } ],
            "difficulty": "beginner",
            "category": "Java",
            "points": 10
        },
        {
            "id": 102,
            "language": "java",
            "title": "Java Even Numbers",
            "description": "Print all even numbers from 2 to 100 in Java.",
            "examples": { "output": "2\n4\n...\n100" },
            "notes": ["Use a for loop", "Print each number on a new line"],
            "testCases": [ { "input": "", "expectedOutput": "2\n4\n6\n8\n10\n...\n100" } ],
            "difficulty": "beginner",
            "category": "Java",
            "points": 10
        },
        {
            "id": 103,
            "language": "java",
            "title": "Java Swap Two Numbers",
            "description": "Swap two numbers without using a third variable in Java.",
            "examples": { "output": "After swap: a = 20, b = 10" },
            "notes": ["Don't use a temporary variable", "Use arithmetic operations"],
            "testCases": [ { "input": "10 20", "expectedOutput": "After swap: a = 20, b = 10" } ],
            "difficulty": "beginner",
            "category": "Java",
            "points": 10
        },
        {
            "id": 104,
            "language": "java",
            "title": "Java Prime Number Checker",
            "description": "Write a Java method isPrime(int n) that returns true if n is prime.",
            "examples": { "output": "true\nfalse" },
            "notes": ["Return true for prime numbers, false otherwise", "Handle up to 1000"],
            "testCases": [ { "input": "17", "expectedOutput": "true" }, { "input": "4", "expectedOutput": "false" } ],
            "difficulty": "beginner",
            "category": "Java",
            "points": 10
        },
        { "id": 105, "language": "java", "title": "Java Factorial", "description": "Write a Java method to calculate the factorial of a number.", "examples": { "output": "120" }, "notes": ["Use recursion or loop"], "testCases": [ { "input": "5", "expectedOutput": "120" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 106, "language": "java", "title": "Java Fibonacci", "description": "Print the first N Fibonacci numbers.", "examples": { "output": "0 1 1 2 3" }, "notes": ["Use loop or recursion"], "testCases": [ { "input": "5", "expectedOutput": "0 1 1 2 3" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 107, "language": "java", "title": "Java Reverse String", "description": "Reverse a given string in Java.", "examples": { "output": "cba" }, "notes": ["Use StringBuilder or loop"], "testCases": [ { "input": "abc", "expectedOutput": "cba" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 108, "language": "java", "title": "Java Palindrome Checker", "description": "Check if a string is a palindrome.", "examples": { "output": "true" }, "notes": ["Ignore case"], "testCases": [ { "input": "Madam", "expectedOutput": "true" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 109, "language": "java", "title": "Java Sum Array", "description": "Sum all elements in an integer array.", "examples": { "output": "15" }, "notes": ["Use for loop"], "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "15" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 110, "language": "java", "title": "Java Find Max", "description": "Find the maximum value in an array.", "examples": { "output": "9" }, "notes": ["Use for loop"], "testCases": [ { "input": "[2,9,4,7]", "expectedOutput": "9" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 111, "language": "java", "title": "Java Count Vowels", "description": "Count the number of vowels in a string.", "examples": { "output": "3" }, "notes": ["Ignore case"], "testCases": [ { "input": "Hello", "expectedOutput": "2" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 112, "language": "java", "title": "Java Remove Spaces", "description": "Remove all spaces from a string.", "examples": { "output": "HelloWorld" }, "notes": ["Use replaceAll"], "testCases": [ { "input": "Hello World", "expectedOutput": "HelloWorld" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 113, "language": "java", "title": "Java Array Sort", "description": "Sort an array of integers in ascending order.", "examples": { "output": "1 2 3 4 5" }, "notes": ["Use Arrays.sort"], "testCases": [ { "input": "[5,3,1,4,2]", "expectedOutput": "1 2 3 4 5" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 114, "language": "java", "title": "Java Character Frequency", "description": "Count frequency of each character in a string.", "examples": { "output": "a:2 b:1" }, "notes": ["Use HashMap"], "testCases": [ { "input": "aba", "expectedOutput": "a:2 b:1" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 115, "language": "java", "title": "Java Leap Year", "description": "Check if a year is a leap year.", "examples": { "output": "true" }, "notes": ["Use modulo"], "testCases": [ { "input": "2020", "expectedOutput": "true" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 116, "language": "java", "title": "Java Sum Digits", "description": "Sum all digits of a number.", "examples": { "output": "6" }, "notes": ["Use loop"], "testCases": [ { "input": "123", "expectedOutput": "6" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 117, "language": "java", "title": "Java Remove Duplicates", "description": "Remove duplicate elements from an array.", "examples": { "output": "1 2 3" }, "notes": ["Use Set"], "testCases": [ { "input": "[1,2,2,3]", "expectedOutput": "1 2 3" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 118, "language": "java", "title": "Java Reverse Array", "description": "Reverse an array of integers.", "examples": { "output": "5 4 3 2 1" }, "notes": ["Use loop"], "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "5 4 3 2 1" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 119, "language": "java", "title": "Java Sum Even Numbers", "description": "Sum all even numbers in an array.", "examples": { "output": "6" }, "notes": ["Use modulo"], "testCases": [ { "input": "[1,2,3,4]", "expectedOutput": "6" } ], "difficulty": "beginner", "category": "Java", "points": 10 },
        { "id": 130, "language": "python", "title": "Python Hello World", "description": "Write a Python program that prints 'Hello, World!' to the console.", "examples": { "output": "Hello, World!" }, "notes": ["Use print()"], "testCases": [ { "input": "", "expectedOutput": "Hello, World!" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 149, "language": "python", "title": "Python Add Two Numbers", "description": "Write a Python program to add two numbers: 5 + 3.", "examples": { "output": "8" }, "notes": ["Use arithmetic operator +"], "testCases": [ { "input": "", "expectedOutput": "8" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 150, "language": "python", "title": "Python Add Two Input Numbers", "description": "Take two numbers as input and print their sum.", "examples": { "output": "Sum: 8" }, "notes": ["Use input() and int()"], "testCases": [ { "input": "5\n3", "expectedOutput": "Sum: 8" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 151, "language": "python", "title": "Python Compare Two Numbers", "description": "Input 2 int numbers a and b. Print True if a >= b, else print False.", "examples": { "output": "True" }, "notes": ["Use >= operator"], "testCases": [ { "input": "5\n3", "expectedOutput": "True" }, { "input": "2\n7", "expectedOutput": "False" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 152, "language": "python", "title": "Python Average of Two Floats", "description": "Input 2 floating point numbers and print their average.", "examples": { "output": "4.5" }, "notes": ["Use float() and division"], "testCases": [ { "input": "3.5\n5.5", "expectedOutput": "4.5" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 153, "language": "python", "title": "Python Square Area", "description": "Input side of a square and print its area.", "examples": { "output": "25" }, "notes": ["Area = side * side"], "testCases": [ { "input": "5", "expectedOutput": "25" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 131, "language": "python", "title": "Python Even Numbers", "description": "Print all even numbers from 2 to 100 in Python.", "examples": { "output": "2\n4\n6\n8\n10" }, "notes": ["Use for loop", "Print each number on a new line"], "testCases": [ { "input": "", "expectedOutput": "2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 132, "language": "python", "title": "Python Swap Two Numbers", "description": "Swap two numbers without using a third variable in Python.", "examples": { "output": "After swap: a = 20, b = 10" }, "notes": ["Use tuple assignment"], "testCases": [ { "input": "10 20", "expectedOutput": "After swap: a = 20, b = 10" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 133, "language": "python", "title": "Python Prime Number Checker", "description": "Write a Python function is_prime(n) that returns True if n is prime.", "examples": { "output": "True\nFalse" }, "notes": ["Return True for prime numbers, False otherwise", "Handle up to 1000"], "testCases": [ { "input": "17", "expectedOutput": "True" }, { "input": "4", "expectedOutput": "False" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 134, "language": "python", "title": "Python Factorial", "description": "Write a Python function to calculate the factorial of a number.", "examples": { "output": "120" }, "notes": ["Use recursion or loop"], "testCases": [ { "input": "5", "expectedOutput": "120" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 135, "language": "python", "title": "Python Fibonacci", "description": "Print the first N Fibonacci numbers.", "examples": { "output": "0 1 1 2 3" }, "notes": ["Use loop or recursion"], "testCases": [ { "input": "5", "expectedOutput": "0 1 1 2 3" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 136, "language": "python", "title": "Python Reverse String", "description": "Reverse a given string in Python.", "examples": { "output": "cba" }, "notes": ["Use slicing"], "testCases": [ { "input": "abc", "expectedOutput": "cba" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 137, "language": "python", "title": "Python Palindrome Checker", "description": "Check if a string is a palindrome.", "examples": { "output": "True" }, "notes": ["Ignore case"], "testCases": [ { "input": "Madam", "expectedOutput": "True" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 138, "language": "python", "title": "Python Sum Array", "description": "Sum all elements in a list.", "examples": { "output": "15" }, "notes": ["Use sum()"], "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "15" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 139, "language": "python", "title": "Python Find Max", "description": "Find the maximum value in a list.", "examples": { "output": "9" }, "notes": ["Use max()"], "testCases": [ { "input": "[2,9,4,7]", "expectedOutput": "9" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 140, "language": "python", "title": "Python Count Vowels", "description": "Count the number of vowels in a string.", "examples": { "output": "3" }, "notes": ["Ignore case"], "testCases": [ { "input": "Hello", "expectedOutput": "2" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 141, "language": "python", "title": "Python Remove Spaces", "description": "Remove all spaces from a string.", "examples": { "output": "HelloWorld" }, "notes": ["Use replace()"], "testCases": [ { "input": "Hello World", "expectedOutput": "HelloWorld" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 142, "language": "python", "title": "Python List Sort", "description": "Sort a list of integers in ascending order.", "examples": { "output": "1 2 3 4 5" }, "notes": ["Use sorted()"], "testCases": [ { "input": "[5,3,1,4,2]", "expectedOutput": "1 2 3 4 5" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 143, "language": "python", "title": "Python Character Frequency", "description": "Count frequency of each character in a string.", "examples": { "output": "a:2 b:1" }, "notes": ["Use dict"], "testCases": [ { "input": "aba", "expectedOutput": "a:2 b:1" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 144, "language": "python", "title": "Python Leap Year", "description": "Check if a year is a leap year.", "examples": { "output": "True" }, "notes": ["Use modulo"], "testCases": [ { "input": "2020", "expectedOutput": "True" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 145, "language": "python", "title": "Python Sum Digits", "description": "Sum all digits of a number.", "examples": { "output": "6" }, "notes": ["Use loop"], "testCases": [ { "input": "123", "expectedOutput": "6" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 146, "language": "python", "title": "Python Remove Duplicates", "description": "Remove duplicate elements from a list.", "examples": { "output": "1 2 3" }, "notes": ["Use set"], "testCases": [ { "input": "[1,2,2,3]", "expectedOutput": "1 2 3" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 147, "language": "python", "title": "Python Reverse List", "description": "Reverse a list of integers.", "examples": { "output": "5 4 3 2 1" }, "notes": ["Use slicing"], "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "5 4 3 2 1" } ], "difficulty": "beginner", "category": "Python", "points": 10 },
        { "id": 148, "language": "python", "title": "Python Sum Even Numbers", "description": "Sum all even numbers in a list.", "examples": { "output": "6" }, "notes": ["Use modulo"], "testCases": [ { "input": "[1,2,3,4]", "expectedOutput": "6" } ], "difficulty": "beginner", "category": "Python", "points": 10 }
            ,{
                "id": 120,
                "language": "java",
                "title": "Intermediate: Matrix Transpose",
                "description": "Write a Java method to transpose a 2D matrix.",
                "examples": { "output": "[[1,4],[2,5],[3,6]]" },
                "notes": ["Return a new transposed matrix"],
                "testCases": [ { "input": "[[1,2,3],[4,5,6]]", "expectedOutput": "[[1,4],[2,5],[3,6]]" } ],
                "difficulty": "intermediate",
                "category": "Java",
                "points": 20
            },
            {
                "id": 121,
                "language": "java",
                "title": "Advanced: Threaded Counter",
                "description": "Create a Java class that starts two threads, each incrementing a shared counter 1000 times.",
                "examples": { "output": "2000" },
                "notes": ["Use synchronization"],
                "testCases": [ { "input": "", "expectedOutput": "2000" } ],
                "difficulty": "advanced",
                "category": "Java",
                "points": 30
            },
            {
                "id": 122,
                "language": "java",
                "title": "Expert: Dijkstra's Algorithm",
                "description": "Implement Dijkstra's shortest path algorithm for a weighted graph in Java.",
                "examples": { "output": "Shortest path: 7" },
                "notes": ["Return shortest path cost"],
                "testCases": [ { "input": "graph, start, end", "expectedOutput": "7" } ],
                "difficulty": "expert",
                "category": "Java",
                "points": 40
            },
                {
                    "id": 123,
                    "language": "java",
                    "title": "Expert: Regex Email Validator",
                    "description": "Write a Java method that uses regex to validate email addresses.",
                    "examples": { "output": "true" },
                    "notes": ["Use Pattern and Matcher"],
                    "testCases": [ { "input": "test@example.com", "expectedOutput": "true" }, { "input": "bad-email", "expectedOutput": "false" } ],
                    "difficulty": "expert",
                    "category": "Java",
                    "points": 40
                },
                {
                    "id": 204,
                    "language": "python",
                    "title": "Expert: Decorator Logger",
                    "description": "Write a Python decorator that logs function calls and arguments.",
                    "examples": { "output": "Calling foo(1, 2)" },
                    "notes": ["Use functools.wraps"],
                    "testCases": [ { "input": "foo(1,2)", "expectedOutput": "Calling foo(1, 2)" } ],
                    "difficulty": "expert",
                    "category": "Python",
                    "points": 40
                },
                {
                    "id": 205,
                    "language": "python",
                    "title": "Expert: Async Web Scraper",
                    "description": "Write an async Python function that scrapes multiple URLs in parallel and returns their titles.",
                    "examples": { "output": "['Title1', 'Title2']" },
                    "notes": ["Use aiohttp and asyncio"],
                    "testCases": [ { "input": "['https://a.com', 'https://b.com']", "expectedOutput": "['Title1', 'Title2']" } ],
                    "difficulty": "expert",
                    "category": "Python",
                    "points": 40
                },
            {
                "id": 201,
                "language": "python",
                "title": "Intermediate: Dictionary Merge",
                "description": "Write a function merge_dicts(d1, d2) that merges two dictionaries, summing values for duplicate keys.",
                "examples": { "output": "{'a': 3, 'b': 5, 'c': 4}" },
                "notes": ["If a key exists in both, sum their values"],
                "testCases": [ { "input": "{'a': 1, 'b': 2}, {'a': 2, 'b': 3, 'c': 4}", "expectedOutput": "{'a': 3, 'b': 5, 'c': 4}" } ],
                "difficulty": "intermediate",
                "category": "Python",
                "points": 20
            },
            {
                "id": 202,
                "language": "python",
                "title": "Advanced: Sudoku Validator",
                "description": "Write a function is_valid_sudoku(board) that checks if a 9x9 Sudoku board is valid.",
                "examples": { "output": "True" },
                "notes": ["Check rows, columns, and 3x3 subgrids"],
                "testCases": [ { "input": "[[5,3,4,...]]", "expectedOutput": "True" } ],
                "difficulty": "advanced",
                "category": "Python",
                "points": 30
            },
            {
                "id": 203,
                "language": "python",
                "title": "Expert: LRU Cache",
                "description": "Implement an LRU (Least Recently Used) cache class with get and put methods.",
                "examples": { "output": "get(2) -> -1" },
                "notes": ["Use OrderedDict or custom logic"],
                "testCases": [ { "input": "put(1,1), put(2,2), get(1), put(3,3), get(2)", "expectedOutput": "-1" } ],
                "difficulty": "expert",
                "category": "Python",
                "points": 40
            },
            {
                "id": 301,
                "language": "javascript",
                "title": "JavaScript Hello World",
                "description": "Write a JavaScript program that prints 'Hello, World!' to the console.",
                "examples": { "output": "Hello, World!" },
                "notes": ["Use console.log()"],
                "testCases": [ { "input": "", "expectedOutput": "Hello, World!" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 302,
                "language": "javascript",
                "title": "JavaScript Even Numbers",
                "description": "Print all even numbers from 2 to 100 in JavaScript.",
                "examples": { "output": "2\n4\n...\n100" },
                "notes": ["Use for loop and console.log()"],
                "testCases": [ { "input": "", "expectedOutput": "2\n4\n6\n8\n10\n...\n100" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 303,
                "language": "javascript",
                "title": "JavaScript Swap Variables",
                "description": "Swap two variables without using a third variable in JavaScript.",
                "examples": { "output": "After swap: a = 20, b = 10" },
                "notes": ["Use destructuring assignment"],
                "testCases": [ { "input": "10 20", "expectedOutput": "After swap: a = 20, b = 10" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 304,
                "language": "javascript",
                "title": "JavaScript Prime Checker",
                "description": "Write a JavaScript function isPrime(n) that returns true if n is prime.",
                "examples": { "output": "true\nfalse" },
                "notes": ["Return true for prime numbers, false otherwise"],
                "testCases": [ { "input": "17", "expectedOutput": "true" }, { "input": "4", "expectedOutput": "false" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 305,
                "language": "javascript",
                "title": "JavaScript Factorial",
                "description": "Write a JavaScript function to calculate the factorial of a number.",
                "examples": { "output": "120" },
                "notes": ["Use recursion or loop"],
                "testCases": [ { "input": "5", "expectedOutput": "120" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 306,
                "language": "javascript",
                "title": "JavaScript Fibonacci",
                "description": "Print the first N Fibonacci numbers.",
                "examples": { "output": "0 1 1 2 3" },
                "notes": ["Use loop or recursion"],
                "testCases": [ { "input": "5", "expectedOutput": "0 1 1 2 3" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 307,
                "language": "javascript",
                "title": "JavaScript Reverse String",
                "description": "Reverse a given string in JavaScript.",
                "examples": { "output": "cba" },
                "notes": ["Use split(), reverse(), join()"],
                "testCases": [ { "input": "abc", "expectedOutput": "cba" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 308,
                "language": "javascript",
                "title": "JavaScript Palindrome Checker",
                "description": "Check if a string is a palindrome.",
                "examples": { "output": "true" },
                "notes": ["Ignore case"],
                "testCases": [ { "input": "Madam", "expectedOutput": "true" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 309,
                "language": "javascript",
                "title": "JavaScript Sum Array",
                "description": "Sum all elements in an array.",
                "examples": { "output": "15" },
                "notes": ["Use reduce() or for loop"],
                "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "15" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 310,
                "language": "javascript",
                "title": "JavaScript Find Max",
                "description": "Find the maximum value in an array.",
                "examples": { "output": "9" },
                "notes": ["Use Math.max() or for loop"],
                "testCases": [ { "input": "[2,9,4,7]", "expectedOutput": "9" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 311,
                "language": "javascript",
                "title": "JavaScript Count Vowels",
                "description": "Count the number of vowels in a string.",
                "examples": { "output": "2" },
                "notes": ["Ignore case"],
                "testCases": [ { "input": "Hello", "expectedOutput": "2" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 312,
                "language": "javascript",
                "title": "JavaScript Remove Spaces",
                "description": "Remove all spaces from a string.",
                "examples": { "output": "HelloWorld" },
                "notes": ["Use replace() with regex"],
                "testCases": [ { "input": "Hello World", "expectedOutput": "HelloWorld" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 313,
                "language": "javascript",
                "title": "JavaScript Array Sort",
                "description": "Sort an array of integers in ascending order.",
                "examples": { "output": "1 2 3 4 5" },
                "notes": ["Use sort() with compare function"],
                "testCases": [ { "input": "[5,3,1,4,2]", "expectedOutput": "1 2 3 4 5" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 314,
                "language": "javascript",
                "title": "JavaScript Character Frequency",
                "description": "Count frequency of each character in a string.",
                "examples": { "output": "a:2 b:1" },
                "notes": ["Use object or Map"],
                "testCases": [ { "input": "aba", "expectedOutput": "a:2 b:1" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 315,
                "language": "javascript",
                "title": "JavaScript Leap Year",
                "description": "Check if a year is a leap year.",
                "examples": { "output": "true" },
                "notes": ["Use modulo operator"],
                "testCases": [ { "input": "2020", "expectedOutput": "true" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 316,
                "language": "javascript",
                "title": "JavaScript Sum Digits",
                "description": "Sum all digits of a number.",
                "examples": { "output": "6" },
                "notes": ["Convert to string and iterate"],
                "testCases": [ { "input": "123", "expectedOutput": "6" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 317,
                "language": "javascript",
                "title": "JavaScript Remove Duplicates",
                "description": "Remove duplicate elements from an array.",
                "examples": { "output": "1 2 3" },
                "notes": ["Use Set or filter"],
                "testCases": [ { "input": "[1,2,2,3]", "expectedOutput": "1 2 3" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 318,
                "language": "javascript",
                "title": "JavaScript Reverse Array",
                "description": "Reverse an array of integers.",
                "examples": { "output": "5 4 3 2 1" },
                "notes": ["Use reverse() method"],
                "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "5 4 3 2 1" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 319,
                "language": "javascript",
                "title": "JavaScript Sum Even Numbers",
                "description": "Sum all even numbers in an array.",
                "examples": { "output": "6" },
                "notes": ["Use filter and reduce"],
                "testCases": [ { "input": "[1,2,3,4]", "expectedOutput": "6" } ],
                "difficulty": "beginner",
                "category": "JavaScript",
                "points": 10
            },
            {
                "id": 320,
                "language": "javascript",
                "title": "Intermediate: Object Deep Clone",
                "description": "Write a function to deep clone a JavaScript object.",
                "examples": { "output": "{a: 1, b: {c: 2}}" },
                "notes": ["Handle nested objects and arrays"],
                "testCases": [ { "input": "{a: 1, b: {c: 2}}", "expectedOutput": "{a: 1, b: {c: 2}}" } ],
                "difficulty": "intermediate",
                "category": "JavaScript",
                "points": 20
            },
            {
                "id": 321,
                "language": "javascript",
                "title": "Advanced: Promise Chain",
                "description": "Create a function that chains multiple async operations using Promises.",
                "examples": { "output": "Final result: 15" },
                "notes": ["Use Promise.then() chaining"],
                "testCases": [ { "input": "[1,2,3]", "expectedOutput": "Final result: 15" } ],
                "difficulty": "advanced",
                "category": "JavaScript",
                "points": 30
            },
            {
                "id": 322,
                "language": "javascript",
                "title": "Expert: Custom Event Emitter",
                "description": "Implement a custom EventEmitter class with on, emit, and off methods.",
                "examples": { "output": "Event fired: data" },
                "notes": ["Handle multiple listeners per event"],
                "testCases": [ { "input": "emit('test', 'data')", "expectedOutput": "Event fired: data" } ],
                "difficulty": "expert",
                "category": "JavaScript",
                "points": 40
            },
            {
                "id": 401,
                "language": "c",
                "title": "C Hello World",
                "description": "Write a C program that prints 'Hello, World!' to the console.",
                "examples": { "output": "Hello, World!" },
                "notes": ["Use printf()", "Include stdio.h"],
                "testCases": [ { "input": "", "expectedOutput": "Hello, World!" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 449,
                "language": "c",
                "title": "C Add Two Numbers",
                "description": "Write a C program to add two numbers: 5 + 3.",
                "examples": { "output": "8" },
                "notes": ["Use arithmetic operator +"],
                "testCases": [ { "input": "", "expectedOutput": "8" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 450,
                "language": "c",
                "title": "C Add Two Input Numbers",
                "description": "Take two numbers as input and print their sum.",
                "examples": { "output": "Sum: 8" },
                "notes": ["Use scanf() and printf()"],
                "testCases": [ { "input": "5\n3", "expectedOutput": "Sum: 8" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 451,
                "language": "c",
                "title": "C Compare Two Numbers",
                "description": "Input 2 int numbers a and b. Print 1 if a >= b, else print 0.",
                "examples": { "output": "1" },
                "notes": ["Use >= operator"],
                "testCases": [ { "input": "5\n3", "expectedOutput": "1" }, { "input": "2\n7", "expectedOutput": "0" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 452,
                "language": "c",
                "title": "C Average of Two Floats",
                "description": "Input 2 floating point numbers and print their average.",
                "examples": { "output": "4.5" },
                "notes": ["Use float and division"],
                "testCases": [ { "input": "3.5\n5.5", "expectedOutput": "4.5" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 453,
                "language": "c",
                "title": "C Square Area",
                "description": "Input side of a square and print its area.",
                "examples": { "output": "25" },
                "notes": ["Area = side * side"],
                "testCases": [ { "input": "5", "expectedOutput": "25" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 402,
                "language": "c",
                "title": "C Even Numbers",
                "description": "Print all even numbers from 2 to 100 in C.",
                "examples": { "output": "2\n4\n...\n100" },
                "notes": ["Use for loop", "Use printf()"],
                "testCases": [ { "input": "", "expectedOutput": "2\n4\n6\n8\n10\n...\n100" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 403,
                "language": "c",
                "title": "C Swap Two Numbers",
                "description": "Swap two numbers without using a third variable in C.",
                "examples": { "output": "After swap: a = 20, b = 10" },
                "notes": ["Use arithmetic operations", "Don't use temp variable"],
                "testCases": [ { "input": "10 20", "expectedOutput": "After swap: a = 20, b = 10" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 404,
                "language": "c",
                "title": "C Prime Number Checker",
                "description": "Write a C function isPrime(int n) that returns 1 if n is prime, 0 otherwise.",
                "examples": { "output": "1\n0" },
                "notes": ["Return 1 for prime, 0 for non-prime", "Handle up to 1000"],
                "testCases": [ { "input": "17", "expectedOutput": "1" }, { "input": "4", "expectedOutput": "0" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 405,
                "language": "c",
                "title": "C Factorial",
                "description": "Write a C function to calculate the factorial of a number.",
                "examples": { "output": "120" },
                "notes": ["Use recursion or loop", "Handle integer overflow"],
                "testCases": [ { "input": "5", "expectedOutput": "120" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 406,
                "language": "c",
                "title": "C Fibonacci",
                "description": "Print the first N Fibonacci numbers.",
                "examples": { "output": "0 1 1 2 3" },
                "notes": ["Use loop or recursion", "Space-separated output"],
                "testCases": [ { "input": "5", "expectedOutput": "0 1 1 2 3" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 407,
                "language": "c",
                "title": "C Reverse String",
                "description": "Reverse a given string in C.",
                "examples": { "output": "cba" },
                "notes": ["Use string manipulation", "Include string.h"],
                "testCases": [ { "input": "abc", "expectedOutput": "cba" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 408,
                "language": "c",
                "title": "C Palindrome Checker",
                "description": "Check if a string is a palindrome.",
                "examples": { "output": "1" },
                "notes": ["Ignore case", "Return 1 for true, 0 for false"],
                "testCases": [ { "input": "Madam", "expectedOutput": "1" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 409,
                "language": "c",
                "title": "C Sum Array",
                "description": "Sum all elements in an integer array.",
                "examples": { "output": "15" },
                "notes": ["Use for loop", "Array size given"],
                "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "15" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 410,
                "language": "c",
                "title": "C Find Max",
                "description": "Find the maximum value in an array.",
                "examples": { "output": "9" },
                "notes": ["Use for loop", "Array size given"],
                "testCases": [ { "input": "[2,9,4,7]", "expectedOutput": "9" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 411,
                "language": "c",
                "title": "C Count Vowels",
                "description": "Count the number of vowels in a string.",
                "examples": { "output": "2" },
                "notes": ["Ignore case", "Check a,e,i,o,u"],
                "testCases": [ { "input": "Hello", "expectedOutput": "2" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 412,
                "language": "c",
                "title": "C Remove Spaces",
                "description": "Remove all spaces from a string.",
                "examples": { "output": "HelloWorld" },
                "notes": ["Use string manipulation", "Modify in-place or create new"],
                "testCases": [ { "input": "Hello World", "expectedOutput": "HelloWorld" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 413,
                "language": "c",
                "title": "C Array Sort",
                "description": "Sort an array of integers in ascending order.",
                "examples": { "output": "1 2 3 4 5" },
                "notes": ["Use bubble sort or qsort", "Space-separated output"],
                "testCases": [ { "input": "[5,3,1,4,2]", "expectedOutput": "1 2 3 4 5" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 414,
                "language": "c",
                "title": "C Character Frequency",
                "description": "Count frequency of each character in a string.",
                "examples": { "output": "a:2 b:1" },
                "notes": ["Use array for counting", "ASCII values"],
                "testCases": [ { "input": "aba", "expectedOutput": "a:2 b:1" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 415,
                "language": "c",
                "title": "C Leap Year",
                "description": "Check if a year is a leap year.",
                "examples": { "output": "1" },
                "notes": ["Use modulo operator", "Return 1 for true, 0 for false"],
                "testCases": [ { "input": "2020", "expectedOutput": "1" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 416,
                "language": "c",
                "title": "C Sum Digits",
                "description": "Sum all digits of a number.",
                "examples": { "output": "6" },
                "notes": ["Use modulo and division", "Handle positive integers"],
                "testCases": [ { "input": "123", "expectedOutput": "6" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 417,
                "language": "c",
                "title": "C Remove Duplicates",
                "description": "Remove duplicate elements from an array.",
                "examples": { "output": "1 2 3" },
                "notes": ["Maintain order", "Space-separated output"],
                "testCases": [ { "input": "[1,2,2,3]", "expectedOutput": "1 2 3" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 418,
                "language": "c",
                "title": "C Reverse Array",
                "description": "Reverse an array of integers.",
                "examples": { "output": "5 4 3 2 1" },
                "notes": ["Use two pointers", "Space-separated output"],
                "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "5 4 3 2 1" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 419,
                "language": "c",
                "title": "C Sum Even Numbers",
                "description": "Sum all even numbers in an array.",
                "examples": { "output": "6" },
                "notes": ["Use modulo operator", "Check for even numbers"],
                "testCases": [ { "input": "[1,2,3,4]", "expectedOutput": "6" } ],
                "difficulty": "beginner",
                "category": "C",
                "points": 10
            },
            {
                "id": 420,
                "language": "c",
                "title": "Intermediate: Matrix Multiplication",
                "description": "Write a C program to multiply two matrices.",
                "examples": { "output": "[[19,22],[43,50]]" },
                "notes": ["Handle 2x2 matrices", "Use nested loops"],
                "testCases": [ { "input": "[[1,2],[3,4]] [[5,6],[7,8]]", "expectedOutput": "[[19,22],[43,50]]" } ],
                "difficulty": "intermediate",
                "category": "C",
                "points": 20
            },
            {
                "id": 421,
                "language": "c",
                "title": "Advanced: Binary Search Tree",
                "description": "Implement a binary search tree with insert and search operations.",
                "examples": { "output": "Found: 1" },
                "notes": ["Use struct for nodes", "Handle memory allocation"],
                "testCases": [ { "input": "insert 5,3,7,1 search 1", "expectedOutput": "Found: 1" } ],
                "difficulty": "advanced",
                "category": "C",
                "points": 30
            },
            {
                "id": 422,
                "language": "c",
                "title": "Expert: Memory Pool Allocator",
                "description": "Implement a custom memory pool allocator in C.",
                "examples": { "output": "Allocated: 0x1000" },
                "notes": ["Use malloc/free", "Handle fragmentation"],
                "testCases": [ { "input": "alloc 100", "expectedOutput": "Allocated: 0x1000" } ],
                "difficulty": "expert",
                "category": "C",
                "points": 40
            },
            { "id": 423, "language": "c", "title": "C GCD Calculator", "description": "Find the Greatest Common Divisor of two numbers.", "examples": { "output": "6" }, "notes": ["Use Euclidean algorithm"], "testCases": [ { "input": "48 18", "expectedOutput": "6" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 424, "language": "c", "title": "C LCM Calculator", "description": "Find the Least Common Multiple of two numbers.", "examples": { "output": "144" }, "notes": ["Use GCD formula"], "testCases": [ { "input": "48 18", "expectedOutput": "144" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 425, "language": "c", "title": "C Armstrong Number", "description": "Check if a number is an Armstrong number.", "examples": { "output": "1" }, "notes": ["Sum of cubes equals original"], "testCases": [ { "input": "153", "expectedOutput": "1" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 426, "language": "c", "title": "C Perfect Number", "description": "Check if a number is a perfect number.", "examples": { "output": "1" }, "notes": ["Sum of divisors equals number"], "testCases": [ { "input": "6", "expectedOutput": "1" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 427, "language": "c", "title": "C Binary to Decimal", "description": "Convert a binary number to decimal.", "examples": { "output": "10" }, "notes": ["Use string input"], "testCases": [ { "input": "1010", "expectedOutput": "10" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 428, "language": "c", "title": "C Decimal to Binary", "description": "Convert a decimal number to binary.", "examples": { "output": "1010" }, "notes": ["Use division by 2"], "testCases": [ { "input": "10", "expectedOutput": "1010" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 429, "language": "c", "title": "C String Length", "description": "Calculate string length without strlen().", "examples": { "output": "5" }, "notes": ["Count characters manually"], "testCases": [ { "input": "Hello", "expectedOutput": "5" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 430, "language": "c", "title": "C String Copy", "description": "Copy string without strcpy().", "examples": { "output": "Hello" }, "notes": ["Character by character copy"], "testCases": [ { "input": "Hello", "expectedOutput": "Hello" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 431, "language": "c", "title": "C String Compare", "description": "Compare strings without strcmp().", "examples": { "output": "0" }, "notes": ["Return 0 if equal"], "testCases": [ { "input": "abc abc", "expectedOutput": "0" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 432, "language": "c", "title": "C Matrix Addition", "description": "Add two matrices.", "examples": { "output": "[[6,8],[10,12]]" }, "notes": ["Element-wise addition"], "testCases": [ { "input": "[[1,2],[3,4]] [[5,6],[7,8]]", "expectedOutput": "[[6,8],[10,12]]" } ], "difficulty": "intermediate", "category": "C", "points": 20 },
            { "id": 433, "language": "c", "title": "C Matrix Transpose", "description": "Transpose a matrix.", "examples": { "output": "[[1,4],[2,5],[3,6]]" }, "notes": ["Swap rows and columns"], "testCases": [ { "input": "[[1,2,3],[4,5,6]]", "expectedOutput": "[[1,4],[2,5],[3,6]]" } ], "difficulty": "intermediate", "category": "C", "points": 20 },
            { "id": 434, "language": "c", "title": "C Bubble Sort", "description": "Implement bubble sort algorithm.", "examples": { "output": "1 2 5 8 9" }, "notes": ["Compare adjacent elements"], "testCases": [ { "input": "[5,2,8,1,9]", "expectedOutput": "1 2 5 8 9" } ], "difficulty": "intermediate", "category": "C", "points": 20 },
            { "id": 435, "language": "c", "title": "C Selection Sort", "description": "Implement selection sort algorithm.", "examples": { "output": "11 12 22 25 64" }, "notes": ["Find minimum element"], "testCases": [ { "input": "[64,25,12,22,11]", "expectedOutput": "11 12 22 25 64" } ], "difficulty": "intermediate", "category": "C", "points": 20 },
            { "id": 436, "language": "c", "title": "C Insertion Sort", "description": "Implement insertion sort algorithm.", "examples": { "output": "5 6 11 12 13" }, "notes": ["Insert in sorted position"], "testCases": [ { "input": "[12,11,13,5,6]", "expectedOutput": "5 6 11 12 13" } ], "difficulty": "intermediate", "category": "C", "points": 20 },
            { "id": 437, "language": "c", "title": "C Linear Search", "description": "Search element using linear search.", "examples": { "output": "2" }, "notes": ["Return index if found"], "testCases": [ { "input": "[2,3,4,10,40] 4", "expectedOutput": "2" } ], "difficulty": "beginner", "category": "C", "points": 10 },
            { "id": 438, "language": "c", "title": "C Binary Search", "description": "Search in sorted array using binary search.", "examples": { "output": "2" }, "notes": ["Use divide and conquer"], "testCases": [ { "input": "[2,3,4,10,40] 4", "expectedOutput": "2" } ], "difficulty": "intermediate", "category": "C", "points": 20 },
            { "id": 439, "language": "c", "title": "C Linked List Insert", "description": "Insert node at beginning of linked list.", "examples": { "output": "1 -> 2 -> 3" }, "notes": ["Use struct for nodes"], "testCases": [ { "input": "insert 1,2,3", "expectedOutput": "1 -> 2 -> 3" } ], "difficulty": "advanced", "category": "C", "points": 30 },
            { "id": 440, "language": "c", "title": "C Stack Implementation", "description": "Implement stack with push/pop operations.", "examples": { "output": "Popped: 3" }, "notes": ["Use array and top pointer"], "testCases": [ { "input": "push 1,2,3 pop", "expectedOutput": "Popped: 3" } ], "difficulty": "advanced", "category": "C", "points": 30 },
            { "id": 441, "language": "c", "title": "C Queue Implementation", "description": "Implement queue with enqueue/dequeue.", "examples": { "output": "Dequeued: 1" }, "notes": ["Use front and rear pointers"], "testCases": [ { "input": "enqueue 1,2,3 dequeue", "expectedOutput": "Dequeued: 1" } ], "difficulty": "advanced", "category": "C", "points": 30 },
            { "id": 442, "language": "c", "title": "C Recursive Factorial", "description": "Calculate factorial using recursion only.", "examples": { "output": "120" }, "notes": ["Must use recursion"], "testCases": [ { "input": "5", "expectedOutput": "120" } ], "difficulty": "intermediate", "category": "C", "points": 20 },
            { "id": 443, "language": "c", "title": "C Tower of Hanoi", "description": "Solve Tower of Hanoi using recursion.", "examples": { "output": "Move disk 1 from A to C" }, "notes": ["Use recursion"], "testCases": [ { "input": "2", "expectedOutput": "Move disk 1 from A to B" } ], "difficulty": "advanced", "category": "C", "points": 30 },
            { "id": 444, "language": "c", "title": "C File Operations", "description": "Read from file and write to another.", "examples": { "output": "File copied" }, "notes": ["Use fopen, fread, fwrite"], "testCases": [ { "input": "input.txt", "expectedOutput": "File copied" } ], "difficulty": "advanced", "category": "C", "points": 30 },
            { "id": 445, "language": "c", "title": "C Pointer Arithmetic", "description": "Reverse array using pointer arithmetic.", "examples": { "output": "5 4 3 2 1" }, "notes": ["Use pointers only"], "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "5 4 3 2 1" } ], "difficulty": "advanced", "category": "C", "points": 30 },
            { "id": 446, "language": "c", "title": "Expert: Hash Table", "description": "Implement hash table with collision handling.", "examples": { "output": "Found: value" }, "notes": ["Handle collisions"], "testCases": [ { "input": "insert key,value", "expectedOutput": "Found: value" } ], "difficulty": "expert", "category": "C", "points": 40 },
            { "id": 447, "language": "c", "title": "Expert: Quick Sort", "description": "Implement quicksort with partitioning.", "examples": { "output": "1 1 2 3 6 8 10" }, "notes": ["Use divide and conquer"], "testCases": [ { "input": "[3,6,8,10,1,2,1]", "expectedOutput": "1 1 2 3 6 8 10" } ], "difficulty": "expert", "category": "C", "points": 40 },
            { "id": 448, "language": "c", "title": "Expert: Merge Sort", "description": "Implement merge sort algorithm.", "examples": { "output": "5 6 7 11 12 13" }, "notes": ["Merge sorted subarrays"], "testCases": [ { "input": "[12,11,13,5,6,7]", "expectedOutput": "5 6 7 11 12 13" } ], "difficulty": "expert", "category": "C", "points": 40 },
            { "id": 501, "language": "cpp", "title": "C++ Hello World", "description": "Write a C++ program that prints 'Hello, World!' to console.", "examples": { "output": "Hello, World!" }, "notes": ["Use cout", "Include iostream"], "testCases": [ { "input": "", "expectedOutput": "Hello, World!" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 529, "language": "cpp", "title": "C++ Add Two Numbers", "description": "Write a C++ program to add two numbers: 5 + 3.", "examples": { "output": "8" }, "notes": ["Use arithmetic operator +"], "testCases": [ { "input": "", "expectedOutput": "8" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 530, "language": "cpp", "title": "C++ Add Two Input Numbers", "description": "Take two numbers as input and print their sum.", "examples": { "output": "Sum: 8" }, "notes": ["Use cin and cout"], "testCases": [ { "input": "5 3", "expectedOutput": "Sum: 8" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 531, "language": "cpp", "title": "C++ Compare Two Numbers", "description": "Input 2 int numbers a and b. Print 1 if a >= b, else print 0.", "examples": { "output": "1" }, "notes": ["Use >= operator"], "testCases": [ { "input": "5 3", "expectedOutput": "1" }, { "input": "2 7", "expectedOutput": "0" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 532, "language": "cpp", "title": "C++ Average of Two Floats", "description": "Input 2 floating point numbers and print their average.", "examples": { "output": "4.5" }, "notes": ["Use float and division"], "testCases": [ { "input": "3.5 5.5", "expectedOutput": "4.5" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 533, "language": "cpp", "title": "C++ Square Area", "description": "Input side of a square and print its area.", "examples": { "output": "25" }, "notes": ["Area = side * side"], "testCases": [ { "input": "5", "expectedOutput": "25" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 502, "language": "cpp", "title": "C++ Even Numbers", "description": "Print even numbers from 2 to 100.", "examples": { "output": "2\n4\n...\n100" }, "notes": ["Use for loop"], "testCases": [ { "input": "", "expectedOutput": "2\n4\n6\n8\n10" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 503, "language": "cpp", "title": "C++ Swap Variables", "description": "Swap two variables using references.", "examples": { "output": "After swap: a = 20, b = 10" }, "notes": ["Use references"], "testCases": [ { "input": "10 20", "expectedOutput": "After swap: a = 20, b = 10" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 504, "language": "cpp", "title": "C++ Prime Checker", "description": "Check if number is prime using function.", "examples": { "output": "true" }, "notes": ["Return bool"], "testCases": [ { "input": "17", "expectedOutput": "true" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 505, "language": "cpp", "title": "C++ Factorial", "description": "Calculate factorial using function.", "examples": { "output": "120" }, "notes": ["Use recursion or loop"], "testCases": [ { "input": "5", "expectedOutput": "120" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 506, "language": "cpp", "title": "C++ Vector Sum", "description": "Sum all elements in a vector.", "examples": { "output": "15" }, "notes": ["Use vector container"], "testCases": [ { "input": "[1,2,3,4,5]", "expectedOutput": "15" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 507, "language": "cpp", "title": "C++ String Reverse", "description": "Reverse string using STL.", "examples": { "output": "cba" }, "notes": ["Use string class"], "testCases": [ { "input": "abc", "expectedOutput": "cba" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 508, "language": "cpp", "title": "C++ Class Rectangle", "description": "Create Rectangle class with area method.", "examples": { "output": "20" }, "notes": ["Use class and methods"], "testCases": [ { "input": "4 5", "expectedOutput": "20" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 509, "language": "cpp", "title": "C++ Function Overloading", "description": "Overload add function for int and double.", "examples": { "output": "7\n7.5" }, "notes": ["Multiple function definitions"], "testCases": [ { "input": "3 4\n3.5 4.0", "expectedOutput": "7\n7.5" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 510, "language": "cpp", "title": "C++ Array Sort STL", "description": "Sort array using STL sort.", "examples": { "output": "1 2 3 4 5" }, "notes": ["Use std::sort"], "testCases": [ { "input": "[5,3,1,4,2]", "expectedOutput": "1 2 3 4 5" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 511, "language": "cpp", "title": "C++ Constructor/Destructor", "description": "Create class with constructor and destructor.", "examples": { "output": "Created\nDestroyed" }, "notes": ["Show object lifecycle"], "testCases": [ { "input": "", "expectedOutput": "Created\nDestroyed" } ], "difficulty": "beginner", "category": "C++", "points": 10 },
            { "id": 512, "language": "cpp", "title": "C++ Inheritance", "description": "Create base and derived class.", "examples": { "output": "Base method\nDerived method" }, "notes": ["Use public inheritance"], "testCases": [ { "input": "", "expectedOutput": "Base method\nDerived method" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 513, "language": "cpp", "title": "C++ Virtual Functions", "description": "Implement virtual function polymorphism.", "examples": { "output": "Derived implementation" }, "notes": ["Use virtual keyword"], "testCases": [ { "input": "", "expectedOutput": "Derived implementation" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 514, "language": "cpp", "title": "C++ Operator Overloading", "description": "Overload + operator for custom class.", "examples": { "output": "Result: 7" }, "notes": ["Overload arithmetic operator"], "testCases": [ { "input": "3 4", "expectedOutput": "Result: 7" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 515, "language": "cpp", "title": "C++ Template Function", "description": "Create template function for max of two values.", "examples": { "output": "5\n3.7" }, "notes": ["Use template keyword"], "testCases": [ { "input": "3 5\n2.1 3.7", "expectedOutput": "5\n3.7" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 516, "language": "cpp", "title": "C++ STL Vector Operations", "description": "Use vector push_back, pop_back, size.", "examples": { "output": "Size: 2" }, "notes": ["Use vector methods"], "testCases": [ { "input": "push 1,2,3 pop", "expectedOutput": "Size: 2" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 517, "language": "cpp", "title": "C++ STL Map", "description": "Use map to count character frequency.", "examples": { "output": "a:2 b:1" }, "notes": ["Use std::map"], "testCases": [ { "input": "aba", "expectedOutput": "a:2 b:1" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 518, "language": "cpp", "title": "C++ Exception Handling", "description": "Handle division by zero using try-catch.", "examples": { "output": "Error: Division by zero" }, "notes": ["Use try-catch blocks"], "testCases": [ { "input": "10 0", "expectedOutput": "Error: Division by zero" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 519, "language": "cpp", "title": "C++ File I/O", "description": "Read from file and write to another using fstream.", "examples": { "output": "File copied" }, "notes": ["Use ifstream/ofstream"], "testCases": [ { "input": "input.txt", "expectedOutput": "File copied" } ], "difficulty": "intermediate", "category": "C++", "points": 20 },
            { "id": 520, "language": "cpp", "title": "C++ Smart Pointers", "description": "Use unique_ptr for memory management.", "examples": { "output": "Value: 42" }, "notes": ["Use std::unique_ptr"], "testCases": [ { "input": "42", "expectedOutput": "Value: 42" } ], "difficulty": "advanced", "category": "C++", "points": 30 },
            { "id": 521, "language": "cpp", "title": "C++ Lambda Functions", "description": "Use lambda with STL algorithms.", "examples": { "output": "6 8 10" }, "notes": ["Use lambda expressions"], "testCases": [ { "input": "[3,4,5]", "expectedOutput": "6 8 10" } ], "difficulty": "advanced", "category": "C++", "points": 30 },
            { "id": 522, "language": "cpp", "title": "C++ Move Semantics", "description": "Implement move constructor and assignment.", "examples": { "output": "Moved successfully" }, "notes": ["Use std::move"], "testCases": [ { "input": "", "expectedOutput": "Moved successfully" } ], "difficulty": "advanced", "category": "C++", "points": 30 },
            { "id": 523, "language": "cpp", "title": "C++ Thread Programming", "description": "Create multiple threads using std::thread.", "examples": { "output": "Thread 1 complete" }, "notes": ["Use std::thread"], "testCases": [ { "input": "2", "expectedOutput": "Thread 1 complete" } ], "difficulty": "advanced", "category": "C++", "points": 30 },
            { "id": 524, "language": "cpp", "title": "C++ Template Class", "description": "Create template class for Stack.", "examples": { "output": "Popped: 3" }, "notes": ["Use class templates"], "testCases": [ { "input": "push 1,2,3 pop", "expectedOutput": "Popped: 3" } ], "difficulty": "advanced", "category": "C++", "points": 30 },
            { "id": 525, "language": "cpp", "title": "Expert: Custom Iterator", "description": "Implement custom iterator for container.", "examples": { "output": "1 2 3" }, "notes": ["Implement iterator interface"], "testCases": [ { "input": "[1,2,3]", "expectedOutput": "1 2 3" } ], "difficulty": "expert", "category": "C++", "points": 40 },
            { "id": 526, "language": "cpp", "title": "Expert: RAII Pattern", "description": "Implement RAII for resource management.", "examples": { "output": "Resource acquired\nResource released" }, "notes": ["Use constructor/destructor"], "testCases": [ { "input": "", "expectedOutput": "Resource acquired\nResource released" } ], "difficulty": "expert", "category": "C++", "points": 40 },
            { "id": 527, "language": "cpp", "title": "Expert: Variadic Templates", "description": "Create variadic template function.", "examples": { "output": "Sum: 15" }, "notes": ["Use parameter packs"], "testCases": [ { "input": "1,2,3,4,5", "expectedOutput": "Sum: 15" } ], "difficulty": "expert", "category": "C++", "points": 40 },
            { "id": 528, "language": "cpp", "title": "Expert: Metaprogramming", "description": "Use SFINAE for compile-time checks.", "examples": { "output": "Is integer: true" }, "notes": ["Use std::enable_if"], "testCases": [ { "input": "42", "expectedOutput": "Is integer: true" } ], "difficulty": "expert", "category": "C++", "points": 40 }
    ]
}
